Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


Begin optimization report for: main(int, char **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at demo_omp.c(17,2)
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.001
   remark #15525: call to function 'sched_getcpu' is serialized   [ demo_omp.c(20,17) ]
   remark #15525: call to function 'printf' is serialized   [ demo_omp.c(21,3) ]
   remark #15301: OpenMP SIMD LOOP WAS VECTORIZED
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 205 
   remark #15477: vector loop cost: 219.120 
   remark #15478: estimated potential speedup: 0.870 
   remark #15485: serialized function calls: 2
   remark #15488: --- end vector loop cost summary ---
   remark #15489: --- begin vector function matching report ---
   remark #15490: Function call: sched_getcpu(void) with simdlen=16, actual parameter types: (void)   [ demo_omp.c(20,17) ]
   remark #15545: SIMD annotation was not seen, consider adding 'declare simd' directives at function declaration 
   remark #15490: Function call: printf(const char *__restrict__, ...) with simdlen=16, actual parameter types: (uniform,uniform,vector)   [ demo_omp.c(21,3) ]
   remark #15545: SIMD annotation was not seen, consider adding 'declare simd' directives at function declaration 
   remark #15493: --- end vector function matching report ---
LOOP END

LOOP BEGIN at demo_omp.c(17,2)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.004
LOOP END
===========================================================================
